@use "sass:math";

@import "../breakpoint/mixins";
@import "./vars";

.#{$ak-grid-classname} {
  box-sizing: border-box;
  display: flex;
  flex-wrap: wrap;

  // Column widths.
  @for $i from 1 through 12 {
    &--#{$i}-cols > &__item {
      width: math.div(1, $i) * 100%;
    }
  }
  @for $i from 1 through 12 {
    &__item--#{$i}-cols {
      width: math.div($i, 12) * 100%;
    }
  }
  // Responsive column widths.
  @each $size in $ak-grid-column-sizes {
    @include ak-breakpoint-gt($size) {
      @for $i from 1 through 12 {
        &--#{$i}-cols--gt-#{$size} > &__item {
          width: math.div(1, $i) * 100%;
        }
      }
      @for $i from 1 through 12 {
        &__item--#{$i}-cols--gt-#{$size} {
          width: math.div($i, 12) * 100%;
        }
      }
    }
  }

  // Padded grid items.
  &--padded {
    margin-bottom: -1 * $ak-grid-padding;
    margin-left: -0.5 * $ak-grid-padding;
    margin-right: -0.5 * $ak-grid-padding;
  }
  &--padded &__item {
    margin-bottom: $ak-grid-padding;
    padding-left: 0.5 * $ak-grid-padding;
    padding-right: 0.5 * $ak-grid-padding;
  }

  // Reversed direction.
  &--reversed {
    flex-direction: row-reverse;
  }

  // Horizontal alignment.
  &--align-center {
    justify-content: center;
  }
  &--align-right {
    justify-content: flex-end;
  }
  &--align-space-around {
    justify-content: space-around;
  }
  &--align-space-between {
    justify-content: space-between;
  }

  // Vertical alignment.
  &--valign-middle > &__item {
    align-self: center;
  }
  &--valign-bottom > &__item {
    align-self: flex-end;
  }
  &__item {
    &--valign-middle {
      align-self: center;
    }
    &--valign-bottom {
      align-self: flex-end;
    }
  }
}
